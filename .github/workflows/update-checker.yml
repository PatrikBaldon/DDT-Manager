name: Update Checker

on:
  schedule:
    - cron: '0 9 * * 1'  # Ogni lunedÃ¬ alle 9:00
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Node.js dependencies
      run: |
        npm install
    
    - name: Check for updates
      run: |
        python -c "
        import requests
        import json
        
        # Controlla aggiornamenti dipendenze Python
        response = requests.get('https://pypi.org/pypi/django/json')
        django_latest = response.json()['info']['version']
        
        response = requests.get('https://pypi.org/pypi/reportlab/json')
        reportlab_latest = response.json()['info']['version']
        
        print(f'Django latest: {django_latest}')
        print(f'ReportLab latest: {reportlab_latest}')
        
        # Controlla aggiornamenti Python
        response = requests.get('https://api.github.com/repos/python/cpython/releases/latest')
        python_latest = response.json()['tag_name']
        
        print(f'Python latest: {python_latest}')
        "
        
        # Controlla aggiornamenti Node.js
        node -e "
        const https = require('https');
        
        https.get('https://api.github.com/repos/nodejs/node/releases/latest', (res) => {
          let data = '';
          res.on('data', (chunk) => data += chunk);
          res.on('end', () => {
            const release = JSON.parse(data);
            console.log('Node.js latest:', release.tag_name);
          });
        });
        "
        
        # Controlla aggiornamenti Electron
        npm outdated electron
    
    - name: Create issue if updates available
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: 'PatrikBaldon',
            repo: 'DDT-Application',
            title: 'ðŸ”„ Aggiornamenti Dipendenze Disponibili',
            body: 'Sono disponibili aggiornamenti per le dipendenze del progetto. Controlla i log per dettagli.',
            labels: ['dependencies', 'maintenance']
          });
          
          console.log(`Issue created: ${issue.data.html_url}`);
