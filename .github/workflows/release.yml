name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run migrations
      run: |
        python manage.py migrate
    
    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput
    
    - name: Create installer package
      run: |
        # Crea il pacchetto per l'installer
        mkdir -p release_package
        cp -r installer/* release_package/
        cp -r ddt_app release_package/app/
        cp -r ddt_project release_package/app/
        cp -r templates release_package/app/
        cp -r static release_package/app/
        cp manage.py release_package/app/
        cp requirements.txt release_package/app/
        cp README.md release_package/
        cp LICENSE release_package/
        
        # Crea il file di versione
        echo "${{ github.ref_name }}" > release_package/version.txt
        
        # Crea l'archivio
        cd release_package
        zip -r ../DDT-Application-${{ github.ref_name }}.zip .
        cd ..
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.upload_url }}
        asset_path: ./DDT-Application-${{ github.ref_name }}.zip
        asset_name: DDT-Application-${{ github.ref_name }}.zip
        asset_content_type: application/zip
