name: Build and Release DDT Manager

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: npm install
      
    - name: Setup Django
      run: |
        python manage.py migrate
        python manage.py collectstatic --noinput
        
    - name: Build Electron app for Windows
      run: npm run build-win
      
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ddt-manager-windows
        path: dist/

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: npm install
        
    - name: Setup Django
      run: |
        python manage.py migrate
        python manage.py collectstatic --noinput
        
    - name: Build Electron app for macOS
      run: npm run build-mac
      
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ddt-manager-macos
        path: dist/

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: npm install
        
    - name: Setup Django
      run: |
        python manage.py migrate
        python manage.py collectstatic --noinput
        
    - name: Build Electron app for Linux
      run: npm run build-linux
      
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ddt-manager-linux
        path: dist/

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: ddt-manager-windows
        path: dist/windows/
        
    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: ddt-manager-macos
        path: dist/macos/
        
    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: ddt-manager-linux
        path: dist/linux/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/windows/*
          dist/macos/*
          dist/linux/*
        body: |
          ## DDT Manager v${{ github.ref_name }}
          
          ### üéâ Prima Release Electron
          
          Questa √® la prima release dell'applicazione Electron per la gestione dei Documenti di Trasporto.
          
          ### üì¶ Installazione
          
          **Windows:**
          - Scarica `DDT_Manager_Setup_1.0.0.exe`
          - Esegui l'installer come amministratore
          - Segui le istruzioni per installare Python e Node.js se necessario
          
          **macOS:**
          - Scarica `DDT_Manager-1.0.0.dmg`
          - Apri il file DMG
          - Trascina l'applicazione in Applications
          
          **Linux:**
          - Scarica `DDT_Manager-1.0.0.AppImage`
          - Rendi eseguibile: `chmod +x DDT_Manager-1.0.0.AppImage`
          - Esegui: `./DDT_Manager-1.0.0.AppImage`
          
          ### ‚ú® Caratteristiche
          
          - üñ•Ô∏è **Applicazione Desktop**: Interfaccia nativa per Windows, macOS e Linux
          - üìÑ **Gestione DDT Completa**: Creazione, modifica e visualizzazione documenti
          - üìä **Generazione PDF**: PDF professionali con layout ottimizzato
          - üîÑ **Aggiornamenti Automatici**: Controllo e installazione aggiornamenti
          - üíæ **Backup Automatico**: Sistema di backup integrato per i dati
          - üìà **Monitoraggio Performance**: Tracciamento delle performance dell'applicazione
          - üîî **Notifiche Desktop**: Sistema di notifiche per l'utente
          - ‚öôÔ∏è **Gestione Impostazioni**: Configurazione persistente dell'applicazione
          
          ### üîß Prerequisiti
          
          - Python 3.8+ (installato automaticamente dall'installer)
          - Node.js 16+ (installato automaticamente dall'installer)
          - 500MB di spazio su disco
          - Connessione internet per aggiornamenti
          
          ### üöÄ Sviluppato da
          
          **Patrik Baldon** per **Azienda Agricola BB&F**
          
          ### üìû Supporto
          
          Per supporto tecnico o segnalazione bug, visita:
          - [GitHub Issues](https://github.com/PatrikBaldon/DDT-Application/issues)
          - Email: patrik.baldon@aziendaagricola.com
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}