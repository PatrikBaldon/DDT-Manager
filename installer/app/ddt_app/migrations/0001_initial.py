# Generated by Django 5.2.3 on 2025-09-14 22:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Articolo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=200, verbose_name="Nome Articolo"),
                ),
                (
                    "categoria",
                    models.CharField(max_length=100, verbose_name="Categoria"),
                ),
                ("um", models.CharField(max_length=10, verbose_name="Unità di Misura")),
                (
                    "prezzo_unitario",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Prezzo Unitario"
                    ),
                ),
                ("note", models.TextField(blank=True, verbose_name="Note")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Articolo",
                "verbose_name_plural": "Articoli",
                "ordering": ["categoria", "nome"],
            },
        ),
        migrations.CreateModel(
            name="Configurazione",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "chiave",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Chiave"
                    ),
                ),
                ("valore", models.TextField(verbose_name="Valore")),
                (
                    "descrizione",
                    models.TextField(blank=True, verbose_name="Descrizione"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Configurazione",
                "verbose_name_plural": "Configurazioni",
            },
        ),
        migrations.CreateModel(
            name="DDT",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Numero DDT"
                    ),
                ),
                ("data_documento", models.DateField(verbose_name="Data Documento")),
                (
                    "causale_trasporto",
                    models.CharField(
                        max_length=100, verbose_name="Causale di Trasporto"
                    ),
                ),
                (
                    "luogo_destinazione",
                    models.CharField(
                        max_length=300, verbose_name="Luogo di Destinazione"
                    ),
                ),
                (
                    "trasporto_mezzo",
                    models.CharField(max_length=50, verbose_name="Trasporto a Mezzo"),
                ),
                ("data_ritiro", models.DateField(verbose_name="Data Ritiro")),
                (
                    "annotazioni",
                    models.TextField(blank=True, verbose_name="Annotazioni"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "DDT",
                "verbose_name_plural": "DDT",
                "ordering": ["-data_documento", "-numero"],
            },
        ),
        migrations.CreateModel(
            name="Destinatario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=200, verbose_name="Nome Azienda")),
                (
                    "indirizzo",
                    models.CharField(max_length=300, verbose_name="Indirizzo"),
                ),
                (
                    "cap",
                    models.CharField(
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{5}$", "CAP deve essere di 5 cifre"
                            )
                        ],
                        verbose_name="CAP",
                    ),
                ),
                ("citta", models.CharField(max_length=100, verbose_name="Città")),
                (
                    "provincia",
                    models.CharField(
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z]{2}$",
                                "Provincia deve essere di 2 lettere maiuscole",
                            )
                        ],
                        verbose_name="Provincia",
                    ),
                ),
                (
                    "piva",
                    models.CharField(
                        max_length=11,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{11}$", "P.IVA deve essere di 11 cifre"
                            )
                        ],
                        verbose_name="P.IVA",
                    ),
                ),
                ("cf", models.CharField(max_length=16, verbose_name="Codice Fiscale")),
                ("telefono", models.CharField(max_length=20, verbose_name="Telefono")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Destinatario",
                "verbose_name_plural": "Destinatari",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Mittente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=200, verbose_name="Nome Azienda")),
                (
                    "indirizzo",
                    models.CharField(max_length=300, verbose_name="Indirizzo"),
                ),
                (
                    "cap",
                    models.CharField(
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{5}$", "CAP deve essere di 5 cifre"
                            )
                        ],
                        verbose_name="CAP",
                    ),
                ),
                ("citta", models.CharField(max_length=100, verbose_name="Città")),
                (
                    "provincia",
                    models.CharField(
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z]{2}$",
                                "Provincia deve essere di 2 lettere maiuscole",
                            )
                        ],
                        verbose_name="Provincia",
                    ),
                ),
                (
                    "piva",
                    models.CharField(
                        max_length=11,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{11}$", "P.IVA deve essere di 11 cifre"
                            )
                        ],
                        verbose_name="P.IVA",
                    ),
                ),
                ("cf", models.CharField(max_length=16, verbose_name="Codice Fiscale")),
                ("telefono", models.CharField(max_length=20, verbose_name="Telefono")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                (
                    "pec",
                    models.EmailField(blank=True, max_length=254, verbose_name="PEC"),
                ),
                (
                    "sede_legale",
                    models.BooleanField(default=True, verbose_name="Sede Legale"),
                ),
                ("note", models.TextField(blank=True, verbose_name="Note")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Mittente",
                "verbose_name_plural": "Mittenti",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Vettore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=200, verbose_name="Nome Azienda")),
                (
                    "indirizzo",
                    models.CharField(max_length=300, verbose_name="Indirizzo"),
                ),
                (
                    "cap",
                    models.CharField(
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{5}$", "CAP deve essere di 5 cifre"
                            )
                        ],
                        verbose_name="CAP",
                    ),
                ),
                ("citta", models.CharField(max_length=100, verbose_name="Città")),
                (
                    "provincia",
                    models.CharField(
                        max_length=2,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z]{2}$",
                                "Provincia deve essere di 2 lettere maiuscole",
                            )
                        ],
                        verbose_name="Provincia",
                    ),
                ),
                (
                    "piva",
                    models.CharField(
                        max_length=11,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{11}$", "P.IVA deve essere di 11 cifre"
                            )
                        ],
                        verbose_name="P.IVA",
                    ),
                ),
                ("cf", models.CharField(max_length=16, verbose_name="Codice Fiscale")),
                ("telefono", models.CharField(max_length=20, verbose_name="Telefono")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                (
                    "autista",
                    models.CharField(max_length=100, verbose_name="Nome Autista"),
                ),
                (
                    "patente",
                    models.CharField(max_length=20, verbose_name="Numero Patente"),
                ),
                (
                    "targa",
                    models.CharField(max_length=10, verbose_name="Targa Veicolo"),
                ),
                ("note", models.TextField(blank=True, verbose_name="Note")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Vettore",
                "verbose_name_plural": "Vettori",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="DDTRiga",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantita",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Quantità"
                    ),
                ),
                (
                    "descrizione",
                    models.TextField(blank=True, verbose_name="Descrizione Aggiuntiva"),
                ),
                (
                    "ordine",
                    models.PositiveIntegerField(default=0, verbose_name="Ordine"),
                ),
                (
                    "articolo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ddt_app.articolo",
                        verbose_name="Articolo",
                    ),
                ),
                (
                    "ddt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="righe",
                        to="ddt_app.ddt",
                        verbose_name="DDT",
                    ),
                ),
            ],
            options={
                "verbose_name": "Riga DDT",
                "verbose_name_plural": "Righe DDT",
                "ordering": ["ordine"],
            },
        ),
        migrations.AddField(
            model_name="ddt",
            name="destinatario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="ddt_app.destinatario",
                verbose_name="Destinatario",
            ),
        ),
        migrations.CreateModel(
            name="Destinazione",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=200, verbose_name="Nome Destinazione"),
                ),
                (
                    "indirizzo",
                    models.CharField(max_length=300, verbose_name="Indirizzo"),
                ),
                ("note", models.TextField(blank=True, verbose_name="Note")),
                (
                    "destinatario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destinazioni",
                        to="ddt_app.destinatario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Destinazione",
                "verbose_name_plural": "Destinazioni",
                "ordering": ["nome"],
            },
        ),
        migrations.AddField(
            model_name="ddt",
            name="destinazione",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="ddt_app.destinazione",
                verbose_name="Destinazione",
            ),
        ),
        migrations.AddField(
            model_name="ddt",
            name="mittente",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="ddt_app.mittente",
                verbose_name="Mittente",
            ),
        ),
        migrations.AddField(
            model_name="ddt",
            name="vettore",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="ddt_app.vettore",
                verbose_name="Vettore",
            ),
        ),
    ]
